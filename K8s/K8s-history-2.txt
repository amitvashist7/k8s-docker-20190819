   48  kubectl describe pod wordpress-deployment-9cb886cf6-xtrbc | more
   49  kubectl exec -it wordpress-deployment-9cb886cf6-xtrbc -- /bin/sh
   50  kubectl exec -it wordpress-deployment-9cb886cf6-xtrbc -c mysql -- /bin/sh
   51  history 
   52  kubectl get pods 
   53  gcloud container clusters get-credentials k8s-demo --zone us-central1-a --project sapient-office-218912
   54  kubectl get pods 
   55  kubectl delete deployment wordpress-deployment
   56  kubectl get svc 
   57  kubectl delete svc wordpress-service
   58  ls
   59  cd k8s-docker-GL/
   60  ls
   61  git pull 
   62  ls
   63  cd K8S/
   64  ls
   65  cd service-discovery/
   66  ls
   67  cat secrets.yml 
   68  kubectl create -f secrets.yml 
   69  ls
   70  cat database.yml 
   71  kubectl create -f database.yml 
   72  kubectl get pods 
   73  kubectl create -f database-service.yml 
   74  kubectl get svc 
   75  kubectl get pods -o wide 
   76  ls
   77  cat helloworld-db.yml 
   78  kubectl create -f helloworld-db.yml 
   79  kubectl create -f helloworld-db-service.yml 
   80  kubectl get pods 
   81  kubectl get svc 
   82  kubectl edit svc helloworld-db-service
   83  kubectl get svc 
   84  curl 34.66.135.61:30468
   85  curl 34.66.135.61:3000
   86  ls
   87  kubectl get pods 
   88  kubectl get svc 
   89  kubectl run -it busybox --image=busybox -- /bin/sh
   90  kubectl get pods 
   91  curl 34.66.135.61:3000
   92  kubectl exec database -it -- mysql -u root -p 
   93  ls
   94  vim helloworld-db.yml 
   95  kubectl get pod -n kube-system
   96  kubectl describe pod kube-dns-7df4cb66cb-2gl5w -n kube-system
   97  ls
   98  cd ../cd ..
   99  cd ..
  100  git pull 
  101  ls
  102  cd configmap/
  103  ls
  104  cat reverseproxy.conf 
  105  cat nginx-service.yml 
  106  cat nginx.yml 
  107  ls
  108  kubectl create configmap nginx-config --from-file=reverseproxy.conf 
  109  kubectl get configmap
  110  kubectl get configmap -o yaml
  111  ls
  112  kubectl create -f nginx.yml 
  113  kubectl get pods 
  114  ls
  115  vim nginx-service.yml 
  116  kubectl create -f nginx-service.yml 
  117  kubectl get svc 
  118  kubectl edit svc helloworld-nginx-service
  119  kubectl get svc 
  120  kubectl delete svc database-service helloworld-db-service
  121  kubectl get deployments 
  122  kubectl delete deployments  busybox                 helloworld-deployment
  123  kubectl get pods 
  124  kubectl delete pod database
  125  kubectl get pods 
  126  kubectl get svc 
  127  curl 35.225.206.204   
  128  kubectl exec -it helloworld-nginx -c nginx -- /bin/sh
  129  kubectl get configmap
  130  kubectl edit configmap nginx-config
  131  kubectl get pods 
  132  kubectl exec -it helloworld-nginx -c nginx -- /bin/sh
  133  ls
  134  vim reverseproxy.conf 
  135  kubectl apply configmap nginx-config --from-file=reverseproxy.conf 
  136  kubectl apply configmap nginx-config -o yaml
  137  kubectl get configmap nginx-config -o yaml
  138  kubectl get configmap nginx-config -o yaml > nginx-config-apply.yaml
  139  vim nginx-config-apply.yaml 
  140  kubectl apply -f nginx-config-apply.yaml 
  141  vim nginx-config-apply.yaml 
  142  kubectl get configmap nginx-config -o yaml
  143  vim nginx-config-apply.yaml 
  144  kubectl apply -f nginx-config-apply.yaml 
  145  kubectl get configmap
  146  kubectl edit configmap nginx-config
  147  kubectl exec -it helloworld-nginx -c nginx -- /bin/bash
  148  ls
  149  cd ..
  150  ls
  151  git pull 
  152  ls
  153  kubectl get deployments 
  154  kubectl get pods
  155  kubectl delete pod helloworld-nginx
  156  ls
  157  cd ingress/
  158  ls
  159  kubectl create -f nginx-ingress-controller.yml 
  160  ls
  161  cat echoservice.yml 
  162  kubectl create -f echoservice.yml 
  163  ls
  164  cat helloworld-v1.yml 
  165  cat helloworld-v2.yml 
  166  ls
  167  kubectl create -f helloworld-v1.yml 
  168  kubectl create -f helloworld-v2.yml 
  169  kubectl get posd 
  170  kubectl get pods
  171  kubectl delete pod nginx-ingress-controller-csc7d
  172  kubectl get pods
  173  kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default
  174  kubectl create clusterrolebinding add-on-cluster-admin-1 --clusterrole=cluster-admin --serviceaccount=default:default
  175  kubectl get pods
  176  kubectl delete pod nginx-ingress-controller-8hkmr
  177  kubectl get pods
  178  kubectl get igress
  179  kubectl get ingress
  180  ls
  181  kubectl create -f ingress.yml 
  182  kubectl get ingress
  183  kubectl get svc 
  184  kubectl delete svc helloworld-nginx-service
  185  kubectl get pod 
  186  kubectl get pod -n kube-system
  187  ls
  188  kubectl get pods -o wide 
  189  curl 10.0.1.20
  190  kubectl get vsc 
  191  kubectl get svc 
  192  curl 10.0.1.20
  193  ls
  194  kubectl expose nginx-ingress-controller --type=LoadBalancer
  195  kubectl expose rc nginx-ingress-controller --type=LoadBalancer
  196  kubectl get svc 
  197  curl 34.66.135.61
  198  curl 34.66.135.61 -H "Host:helloworld-v1.example.com"
  199  curl 34.66.135.61 -H "Host:helloworld-v2.example.com"
  200  history 
  201  kubectl get svc 
  202  kubectl delete svc nginx-ingress-controller
  203  kubectl get ingress
  204  kubectl describe ingress helloworld-rules
  205  curl 34.96.110.132
  206  curl 34.96.110.132 -H "Host: helloworld-v1.example.com"
  207  curl 34.96.110.132 -H "Host: helloworld-v2.example.com"
  208  curl 34.96.110.132 -34.96.110.132
  209  curl 34.96.110.132
  210  curl 104.197.141.207
  211  curl 34.96.110.132
  212  ls
  213  kubectl get svc 
  214  ls
  215  cd ..
  216  ls
  217  history > DAY4_History.txt 
  218  vim DAY4_History.txt 
  219  kubectl get ingress
  220  ls
  221  git add . 
  222  git commit -m 
  223  git commit -m "Hist"
  224  git push origin master
  225  gcloud container clusters get-credentials k8s-demo --zone us-central1-a --project sapient-office-218912
  226  ls
  227  cd k8s-docker-GL/
  228  ls
  229  cd K8S/
  230  ls
  231  git pull 
  232  ls
  233  cd nfs-persistent-volume/
  234  ls
  235  vim nfs-pv.yaml 
  236  vim nfs-pvc.yaml 
  237  ls
  238  vim nfs-pvc.yaml 
  239  ls
  240  git pull
  241  ls
  242  cd ../
  243  ls
  244  cd statefullset/
  245  ls
  246  vim helloworld-stateful.yaml 
  247  ls
  248  kubectl create -f helloworld-stateful.yaml 
  249  kubectl get pods 
  250  vim helloworld-stateful.yaml 
  251  kubectl get pods 
  252  kubectl delete pod helloworld-statefull-1
  253  kubectl get pods 
  254  ls
  255  vim cassandra.yaml 
  256  kubectl get pv 
  257  kubectl get pvc
  258  kubectl create -f cassandra.yaml 
  259  kubectl get pv 
  260  kubectl get pvc
  261  kubectl get pods 
  262  kubectl get pvc
  263  kubectl get pv
  264  kubectl get pvc
  265  kubectl get pods 
  266  ls
  267  vim cassandra.yaml 
  268  kubectl get pv 
  269  kubectl get pvc
  270  kubectl get pods 
  271  kubectl exec -it cassandra-0 -- nodetool status 
  272  kubectl exec -it cassandra-0 -- bash
  273  kubectl exec -it cassandra-0 -- nodetool status 
  274  kubectl get pos 
  275  kubectl get pod
  276  kubectl delete pod cassandra-2
  277  kubectl get pods 
  278  watch -n .2 kubectl get pods 
  279  kubectl exec -it cassandra-0 -- nodetool status 
  280  kubectl delete -f cassandra.yaml 
  281  kubectl get pv 
  282  kubectl get pvc
  283  ls
  284  vim cassandra.yaml 
  285  ls
  286  vim helloworld-stateful.yaml 
  287  kubectl get pods 
  288  kubectl exec -it helloworld-statefull-2 -- bash
  289  kubectl exec -it helloworld-statefull-2 -- /bin/sh
  290  ls
  291  kubectl get pvc 
  292  kubectl delete pvc --all
  293  kubectl delete pv --all
  294  kubectl get pv 
  295  kubectl get pvc 
  296  ls
  297  vim cassandra.yaml 
  298  kubectl get pods -n kube-system
  299  kubectl get pods -n kube-system -o wide 
  300  kubectl get pods  fluentd-gcp-v3.2.0-mx68q -n kube-system -o wide 
  301  kubectl describe pods  fluentd-gcp-v3.2.0-mx68q -n kube-system -o wide 
  302  kubectl describe pods  fluentd-gcp-v3.2.0-mx68q -n kube-system 
  303  kubectl get daemonset 
  304  kubectl get daemonset  -n kube-system
  305  kubectl describe daemonset  fluentd-gcp-v3.2.0 -n kube-system -o yaml
  306  kubectl get  daemonset  fluentd-gcp-v3.2.0 -n kube-system -o yaml
  307  ls
  308  cd ../../
  309  git pull
  310  ls
  311  cd K8S/
  312  ls
  313  cd resourcequotas/
  314  ls
  315  cat resourcequota.yml 
  316  vim resourcequota.yml 
  317  kubectl get ns
  318  kubectl create -f resourcequota.yml 
  319  kubectl get ns 
  320  kubectl describe rs myspace        
  321  kubectl describe rs --namespace myspace        
  322  kubectl describe rs --namespace=myspace        
  323  kubectl get rs --namespace=myspace        
  324  kubectl get --namespace=myspace        
  325  kubectl get myspace        
  326  kubectl get ns  myspace        
  327  kubectl describe ns  myspace        
  328  ls
  329  vim helloworld-with-quotas.yml 
  330  kubectl create -f helloworld-with-quotas.yml 
  331  kubectl get pods 
  332  kubectl get statefulset
  333  kubectl delete statefulset helloworld-statefull
  334  kubectl get pods -n myspace
  335  kubectl get ns  myspace        
  336  kubectl describe ns  myspace        
  337  ls
  338  kubectl delete -f helloworld-with-quotas.yml
  339  vim helloworld-no-quotas.yml 
  340  kubectl create -f helloworld-no-quotas.yml 
  341  kubectl get pods -n myspace
  342  kubectl get deployments helloworld-deploymen  -n myspace        
  343  kubectl get deployments helloworld-deployment  -n myspace        
  344  kubectl describe deployments helloworld-deployment  -n myspace        
  345  kubectl describe rs helloworld-deployment  -n myspace        
  346  ls
  347  kubectl delete -f resourcequota.yml 
  348  ls
  349  cat defaults.yml 
  350  ls
  351  cd ../../
  352  ls
  353  cd K8S/
  354  ls
  355  git pull 
  356  ls
  357  cd users/
  358  ls
  359  vim user.yaml 
  360  ls
  361  openssl genrsa -out amit.pem 2048
  362  ls
  363  cat README.md 
  364  openssl req -new -key amit.pem -out amit-csr.pem -subj "/CN=amit/O=myteam/"
  365  ls
  366  vim user.yaml 
  367  ls
  368  kubectl create -f user.yaml 
  369  kubectl get users
  370  kubectl delete -f user.yaml 
  371  kubectl create -f user.yaml 
  372  vim user.yaml 
  373  git pull
  374  cd ../../
  375  ls
  376  cat .git/config 
  377  cd ..
  378  rm -rf k8s-docker-GL
  379  ls
  380  git clone         url = https://github.com/amitvashist7/k8s-docker-GL.git
  381  git clone https://github.com/amitvashist7/k8s-docker-GL.git
  382  ls
  383  cd k8s-docker-GL/K8S/users/
  384  ls
  385  vim user.yaml 
  386  kubectl create -f user.yaml 
  387  kubectl config view 
  388  ls
  389  vim admin-user.yaml 
  390  kubectl create -f admin-user.yaml 
  391  cat admin-user.yaml 
  392  vim admin-user.yaml 
  393  vim user.yaml 
  394  kubectl create -f user.yaml 
  395  kubectl get roles
  396  kubectl get clusterrole
  397  ls
  398  cat README.md 
  399  kubectl config get-context
  400  kubectl config get-contexts
  401  ls
  402  kubectl get roles
  403  kubectl get cluster
  404  kubectl get cluster-info
  405  kubectl cluster-info
  406  kubectl cluster-info dump
  407  kubectl cluster-info dump > dump
  408  ls
  409  cat admin-user.yaml 
  410  cat user.yaml 
  411  history 
  412  kubectl config set-context amit --cluster= k8s-demo --username=amitvashist7@outlook.com
  413  kubectl config set-context amit --cluster=k8s-demo --username=amitvashist7@outlook.com
  414  kubectl config set-context amit --cluster=k8s-demo --username=amitvashist7
  415  kubectl config set-context gce --username=amitvashist7@outlook.com
  416  kubectl config view
  417  kubectl get clusterroles system:discovery -o yaml
  418  gcloud container clusters get-credentials k8s-demo --zone us-central1-a --project sapient-office-218912
  419  ls
  420  cat .kube/config 
  421  vim .kube/config 
  422  cat .kube/config | grep -i  k8s-demo
  423  kubectl config set-context amit --cluster=gke_sapient-office-218912_us-central1-a_k8s-demo --username=amitvashist7
  424  kubectl config set-context amit --cluster=gke_sapient-office-218912_us-central1-a_k8s-demo --username="amitvashist7@outlook.com"
  425  kubectl config set-context amit --cluster=gke_sapient-office-218912_us-central1-a_k8s-demo --user="amitvashist7@outlook.com"
  426  kubectl config get-contexts
  427  kubectl config use get-contexts amit
  428  kubectl config use get-context amit
  429  kubectl config use-context amit
  430  kubectl get ns 
  431  kubectl get pods 
  432  history 
  433  kubectl get nodes
  434  kubectl get ns 
  435  gcloud container clusters get-credentials k8s-demo --zone us-central1-a --project sapient-office-218912
  436  kubectl get ns 
  437  history 
  438  kubectl config get-contexts
  439  history 
  440  ls
  441  cd k8s-docker-GL/
  442  ls
  443  cd K8S/
  444  ls
  445  cd users/
  446  ls
  447  cat user.yaml 
  448  kubectl get pods 
  449  kubectl get nodes
  450  ls
  451  cd ..
  452  ls
  453  history  > DAY5_History.txt 
  454  vim DAY5_History.txt 
  455  ls
  456  git pull 
  457  kubectl get pods -n kube-system
  458  git pull 
  459  ls
  460  cd metrics-server/
  461  ls
  462  cd  ..
  463  kubectl top nodes
  464  kubectl get pods 
  465  kubectl top pods 
  466  ls
  467  cd autoscaling/
  468  ls
  469  vim hpa-example.yml 
  470  kubectl create -f hpa-example.yml 
  471  kubectl get pods 
  472  kubectl get deployments 
  473  kubectl get hpa
  474  kubectl top pods 
  475  kubectl get pods 
  476  ls
  477  kubectl get pods -n kube-system
  478  kubectl describe pods metrics-server-v0.2.1-fd596d746-h99sk -n kube-system
  479  ls
  480  kubectl get hpa
  481  kubectl edit hpa hpa-example-autoscaler
  482  kubectl get svc 
  483  kubectl run -it load-gen --image=busybox /bin/sh
  484  ls
  485  kubectl delete -f hpa-example.yml 
  486  kubectl get pods 
  487  kubectl delete pod load-gen-8bfdf4b7f-7mrjw
  488  ls
  489  cd ..
  490  ls
  491  git pull
  492  ls
  493  cd helm/
  494  ls
  495  cat README.md 
  496  ls
  497  cd
  498  ls
  499  cd helm/
  500  ls
  501  cd ..
  502  ls
  503  cd helm/
  504  ls
  505  tar -zxvf helm-v2.11.0-linux-amd64.tar.gz
  506  ls
  507  cat README.md 
  508  mv linux-amd64/helm /usr/local/bin/helm
  509  sudo mv linux-amd64/helm /usr/local/bin/helm
  510  sudo chmod +x /usr/local/bin/helm
  511  cat README.md 
  512  ls
  513  cat helm-rbac.yaml 
  514  kubectl create -f helm-rbac.yaml
  515  cat README.md 
  516  helm init --service-account tiller
  517  cat README.md 
  518  ls
  519  ## Setup S3 helm repository
  520  Make sure to set the default region in setup-s3-helm-repo.sh
  521  ```
  522  ./setup-s3-helm-repo.sh
  523  helm search redis
  524  helm search mysql
  525  helm search redis
  526  helm install stable/redis
  527  helm  list 
  528  helm delete jaunty-alligator
  529  helm  list 
  530  helm install stable/redis --name myredis
  531  export REDIS_PASSWORD=$(kubectl get secret --namespace default myredis -o jsonpath="{.data.redis-password}" | base64 --decode)
  532  kubectl run --namespace default myredis-client --rm --tty -i --restart='Never'     --env REDIS_PASSWORD=$REDIS_PASSWORD    --image docker.io/bitnami/redis:4.0.12 -- bash
  533  kubectl get pods 
  534  helm  list 
  535  helm delete myredis 
  536  helm  create mychart
  537  ls
  538  cd mychart/
  539  ls
  540  cat Chart.yaml 
  541  ls
  542  cat values.yaml 
  543  ls
  544  cd charts/
  545  ls
  546  cd ..
  547  ls
  548  cd ..
  549  ls
  550  cd demo-chart/
  551  ls
  552  cat Chart.yaml 
  553  cat values.yaml 
  554  vim values.yaml 
  555  ls
  556  helm install .
  557  ls
  558  cat requirements.yaml 
  559  ls
  560  cd ..
  561  ls
  562  pwd
  563  cd 
  564  ls
  565  cd helm/
  566  ls
  567  cp -rf demo-chart ../k8s-docker-GL/K8S/helm/
  568  cd ../k8s-docker-GL/K8S/helm/
  569  ls
  570  du -sh demo-chart
  571  git add . 
  572  git commit -m "Demo-Chart"
  573  git push origin master
  574  ls
  575  cd demo-chart/
  576  ls
  577  cd charts/
  578  ls
  579  du -sh * 
  580  ls
  581  cd ..
  582  ls
  583  ;s
  584  git add . 
  585  ls -a 
  586  vim .helmignore 
  587  ls
  588  du -sh charts
  589  ls
  590  vim .gitignore 
  591  git add . 
  592  git commit -m "Charts"
  593  git push origin master
  594  helm list 
  595  helm delete joyous-guppy
  596  ls
  597  cd ../../
  598  ls
  599  cd istio/
  600  ls
  601  cat README.m
  602  cat README.md 
  603  ls
  604  cat README.md 
  605  wget https://github.com/istio/istio/releases/download/1.0.2/istio-1.0.2-linux.tar.gz
  606  tar -xzvf istio-1.0.2-linux.tar.gz
  607  ls
  608  cd istio-1.0.2/
  609  ls
  610  cd bin/
  611  ls
  612  istioctl 
  613  ls
  614  cd ..
  615  ls
  616  cd samples/
  617  ls
  618  cd ..
  619  ls
  620  cd install/
  621  ls
  622  cd kubernetes/
  623  ls
  624  cd helm/istio/
  625  ls
  626  cd templates/
  627  ls
  628  cd ../../../../
  629  ls
  630  cd ..
  631  ls
  632  kubectl create -f install/kubernetes/helm/istio/templates/crds.yaml 
  633  kubectl create -f install/kubernetes/istio-demo.yaml 
  634  kubectl get ns
  635  kubectl get namespace -L istio-injection
  636  kubectl label namespace  default istio-injection=enabled
  637  kubectl get namespace -L istio-injection
  638  ls
  639  cd ..
  640  ls
  641  cd istio-1.0.2/
  642  ls
  643  bin
  644  ls
  645  cat README.md 
  646  ls
  647  cd ../
  648  ls
  649  cat README.md 
  650  export PATH="$PATH:~/k8s-docker-GL/K8S/istio/istio-1.0.2/bin"
  651  istioctl --help
  652  history 
  653  kubectl get ns 
  654  kubectl get pod -n istio-system
  655  ls
  656  vim helloworld.yaml 
  657  kubectl apply -f (istioctl kube-inject -f helloworld.yaml )
  658  kubectl apply -f <(istioctl kube-inject -f helloworld.yaml )
  659  kubectl get pods 
  660  cat helloworld-gw.yaml 
  661  kubectl create -f helloworld-gw.yaml 
  662  kubectl get svc 
  663  history 
  664  kubectl get svc 
  665  kubectl get ns 
  666  kubectl get svc -n istio-system
  667  curl 146.148.85.151
  668  curl 146.148.85.151/hello
  669  history 
  670  ls
  671  history > ../DAY5_History.txt 
  672  git add . 
  673  git commit -m "Istio History"
  674  git push origin master
  675  ls
  676  kubectl apply -f <(istioctl kube-inject -f helloworld-v2.yaml )
  677  kubectl get pods 
  678  kubectl apply -f helloworld-v2-routing.yaml 
  679  curl 146.148.85.151/hello
  680  curl 146.148.85.151/hello -H "host: hello.example.com"
  681  curl 146.148.85.151/hello -H "host: hello.example.com" -H "end-user: amit"
  682  ls
  683  vim helloworld-v2.yaml 
  684  vim helloworld-v2-routing.yaml 
  685  curl 146.148.85.151/hello -H "host: hello.example.com" -H "end-user: jhon"
  686  curl 146.148.85.151/hello -H "host: hello.example.com" -H "end-user: john"
  687  kubectl get pods 
  688  curl 146.148.85.151/hello 
  689  curl 146.148.85.151/hello -H "host: hello.example.com" 
  690  curl 146.148.85.151/hello -H "host: hello.example.com" -H "end-user: john"
  691  s
  692  ls
  693  cat helloworld-v2-canary.yaml 
  694  ls
  695  kubectl get svc -n istio-system
  696  kubectl edit svc grafana -n istio-system
  697  kubectl get svc -n istio-system
  698  ls
  699  cd ..
  700  ls
  701  history > DAY4_History.txt 
  702  git pull
  703  git stash
  704  history > DAY5_History.txt 
  705  git add . 
  706  git commit -m "Day5"
  707  git push origin master
  708  ls
  709  gcloud container clusters get-credentials k8s-cluster-demo --zone us-central1-a --project sapient-office-218912
  710  kubectl get nodes 
  711  git clone 
  712  git clone https://github.com/amitvashist7/mindtree-may-devops.git
  713  ls
  714  cd mindtree-may-devops/k8s/
  715  ls
  716  cp -rf ../../kubernetes-project/first-app . 
  717  ls
  718  mv setup 00-setup
  719  ls
  720  mv first-app 01-first-app
  721  ls
  722  rm -rf 01-first-app/03-Kubernetes\ Basics.pptx 
  723  ls
  724  cd 01-first-app/
  725  ls
  726  vim helloworld.yml 
  727  ls
  728  cat helloworld.yml 
  729  ls
  730  kubectl create -f helloworld.yml 
  731  kubectl get pods 
  732  gcloud container clusters get-credentials k8s-demo --zone us-central1-a --project sapient-office-218912
  733  kubectl get nodes 
  734  kubectl get pods 
  735  ls
  736  cp -rf kubernetes-project/replication-controller mindtree-may-devops/k8s/02-Replication-controller
  737  ls
  738  cd mindtree-may-devops/k8s/
  739  ls
  740  git add . 
  741  git commit -m "RC"; git push 
  742  ls
  743  cd 02-Replication-controller/
  744  ls
  745  cat helloworld-repl-controller.yml 
  746  cd 
  747  kubectl get pods 
  748  kubectl get rc 
  749  kubectl create -f mindtree-may-devops/k8s/02-Replication-controller/helloworld-repl-controller.yml 
  750  kubectl get rc 
  751  kubectl get pods 
  752  kubectl edit rc helloworld-controller
  753  kubectl get pods 
  754  kubectl edit rc helloworld-controller
  755  kubectl get pods 
  756  kubectl delete pod helloworld-controller-b7nj5
  757  kubectl get pods 
  758  kubectl delete pod helloworld-controller-ws7hg
  759  kubectl get pods 
  760  kubectl delete rc helloworld-controller
  761  kubectl get pods 
  762  kubectl create -f mindtree-may-devops/k8s/02-Replication-controller/helloworld-repl-controller.yml 
  763  ls
  764  kubectl get rc 
  765  kubectl scale --replicas=5  -f mindtree-may-devops/k8s/02-Replication-controller/helloworld-repl-controller.yml 
  766  kubectl get pods 
  767  kubectl scale --replicas=5  -f mindtree-may-devops/k8s/02-Replication-controller/helloworld-repl-controller.yml 
  768  kubectl scale --replicas=10 rc helloworld-controller
  769  kubectl get pods 
  770  kubectl delete -f mindtree-may-devops/k8s/02-Replication-controller/helloworld-repl-controller.yml 
  771  kubectl get rc 
  772  kubectl get pods 
  773  ls
  774  cp -rf kubernetes-project/deployment mindtree-may-devops/k8s/03-Deployments
  775  ls
  776  cd mindtree-may-devops/
  777  git add . 
  778  git commit -m "Deployments"; git push 
  779  ls
  780  kubectl get deployments 
  781  ls
  782  kubectl create -f k8s/03-Deployments/helloworld.yml 
  783  ls
  784  kubectl get deployments
  785  kubectl get rs
  786  kubectl get pods 
  787  vim k8s/03-Deployments/helloworld.yml 
  788  kubectl create -f k8s/03-Deployments/helloworld.yml 
  789  kubectl get pods 
  790  kubectl get rc 
  791  kubectl get rs
  792  kubectl delete pod helloworld-deployment-6664884558-ck48v
  793  kubectl get pods 
  794  kubectl get rs
  795  kubectl delete rs helloworld-deployment-test-6664884558
  796  ls
  797  kubectl get rs 
  798  kubectl delete rs helloworld-deployment-test-6664884558
  799  kubectl delete deployment helloworld-deployment-test
  800  kubectl get rs 
  801  kubectl get pods 
  802  kubectl describe pod helloworld-deployment-6664884558-j8kkk
  803  ls
  804  kubectl get deployments 
  805  kubectl rollout status deployment
  806  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:2
  807  kubectl rollout status deployment helloworld-deployment
  808  kubectl edit deployment helloworld-deployment
  809  kubectl get pods 
  810  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:3
  811  kubectl rollout status deployment helloworld-deployment
  812  kubectl get pods 
  813  kubectl get rs 
  814  kubectl describe rs helloworld-deployment-56568f6d7c
  815  kubectl get rs 
  816  kubectl describe rs helloworld-deployment-6664884558
  817  kubectl get rs 
  818  kubectl describe rs helloworld-deployment-7c479664b6
  819  kubectl rollout status deployment helloworld-deployment
  820  kubectl rollout undo deployment helloworld-deployment
  821  kubectl rollout status deployment helloworld-deployment
  822  kubectl get rs
  823  kubectl get pod s
  824  kubectl get pods
  825  kubectl describe pod helloworld-deployment-7c479664b6-2dkcg
  826  ls
  827  history 
  828  history  > K8s-history.txt
  829  vim K8s-history.txt 
  830  git add . 
  831  git commit -m "Deployments-History"; git push 
  832  gcloud container clusters get-credentials k8s-demo --zone us-central1-a --project sapient-office-218912
  833  kubectl get nodes 
  834  ls
  835  cd mindtree-may-devops/n
  836  cd mindtree-may-devops/
  837  ls
  838  cd k8s/03-Deployments/
  839  ls
  840  kubectl create -f helloworld.yml 
  841  cd 
  842  kubectl get deployments 
  843  kubectl get pods 
  844  kubectl expose deployment helloworld-deployment-test --type=NodePort
  845  kubectl get svc 
  846  kubectl get pods 
  847  kubectl get pods -o wide 
  848  kubectl get svc 
  849  kubectl edit svc helloworld-deployment-test
  850  kubectl get svc 
  851  curl 10.128.15.194:31363
  852  kubectl get svc 
  853  kubectl describe svc helloworld-deployment-test
  854  kubectl get pods --show-labels
  855  ]
  856  kubectl scale --replicas=10 deployment helloworld-deployment-test
  857  kubectl get pods --show-labels
  858  kubectl describe svc helloworld-deployment-test
  859  kubectl scale --replicas=1 deployment helloworld-deployment-test
  860  kubectl get pods --show-labels
  861  kubectl describe svc helloworld-deployment-test
  862  kubectl scale --replicas=2 deployment helloworld-deployment-test
  863  kubectl describe svc helloworld-deployment-test
  864  kubectl scale --replicas=10 deployment helloworld-deployment-test
  865  kubectl set image deployment helloworld-deployment-test k8s-demo=amitvashist7/k8s-tiny-web:2
  866  kubectl rollout status deployment helloworld-deployment-test
  867  kubectl set image deployment helloworld-deployment-test k8s-demo=amitvashist7/k8s-tiny-web:3
  868  kubectl rollout status deployment helloworld-deployment-test
  869  kubectl rollout history deoloyment helloworld-deployment-test
  870  kubectl rollout history deployment helloworld-deployment-test
  871  kubectl undo deployment  helloworld-deployment-test
  872  kubectl rollout undo deployment  helloworld-deployment-test
  873  kubectl rollout history deployment helloworld-deployment-test
  874  kubectl rollout undo deployment  helloworld-deployment-test
  875  kubectl rollout history deployment helloworld-deployment-test
  876  kubectl rollout history deployment helloworld-deployment-test --revision=1
  877  kubectl rollout history deployment helloworld-deployment-test --revision=2
  878  kubectl rollout history deployment helloworld-deployment-test --revision=4
  879  kubectl rollout history deployment helloworld-deployment-test --revision=5
  880  kubectl rollout undo deployment  helloworld-deployment-test --to-revision=1
  881  kubectl rollout history deployment helloworld-deployment-test 
  882  kubectl get rs
  883  ls
  884  cd mindtree-may-devops/
  885  ls
  886  cd k8s/01-first-app/
  887  ls
  888  kubectl create -f helloworld.yml 
  889  vim helloworld-service.yml 
  890  vim helloworld-nodeport-service.yml 
  891  ls
  892  kubectl create -f helloworld-service.yml 
  893  kubectl get svc 
  894  kubectl delete deployment,service helloworld-deployment-test
  895  kubectl get pods,svc
  896  kubectl delete pods nodehelloworld
  897  kubectl delete svc helloworld-service
  898  kubectl get svc,pods,deployments
  899  ls
  900  cd ../
  901  ls
  902  cd ..
  903  ls
  904  history 
  905  history > K8s-history-v2.txt 
  906  vim K8s-history-v2.txt 
  907  git add . 
  908  git commit -m "K8s Hist"
  909  git push origin master
  910  ssh root@52.15.104.71
  911  ssh root@52.14.29.119
  912  ls
  913  ssh root@52.14.29.119
  914  ls
  915  kubectl get nodes 
  916  gcloud container clusters get-credentials k8s-demo --zone us-central1-a --project sapient-office-218912
  917  kubectl get nodes 
  918  kubectl get pods
  919  ls
  920  cd kubernetes-project/
  921  ls
  922  cd deployment/
  923  ls
  924  cat helloworld.yml 
  925  kubectl create -f helloworld.yml 
  926  kubectl get deployments 
  927  kubectl get pods 
  928  kubectl get pods -o wide 
  929  kubectl delete pod helloworld-deployment-6664884558-wm8n4
  930  kubectl get pods 
  931  kubectl get pods -o wide 
  932  kubectl get deployments 
  933  kubectl edit  deployments helloworld-deployment
  934  kubectl get pods 
  935  kubectl scale --replicas=20 deployments helloworld-deployment
  936  kubectl get pods 
  937  kubectl scale --replicas=1 deployments helloworld-deployment
  938  kubectl get pods 
  939  git config --list 
  940  ls
  941  kubectl get pods
  942  kubectl expose deployment helloworld-deployment --type=LoadBalancer
  943  kubectl get svc 
  944  kubectl describe svc helloworld-deployment
  945  kubectl scale --replicas=3 deployments helloworld-deployment
  946  kubectl get pods
  947  kubectl get svc 
  948  kubectl describe svc helloworld-deployment
  949  kubectl scale --replicas=10 deployments helloworld-deployment
  950  kubectl get pods
  951  kubectl rollout status deployment helloworld-deployment
  952  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:2
  953  kubectl rollout status deployment helloworld-deployment
  954  watch -n .1 kubectl get pods 
  955  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:3
  956  watch -n .1 kubectl get pods 
  957  kubectl rollout undo deployment helloworld-deployment
  958  watch -n .1 kubectl get pods 
  959  kubectl rollout history deployment helloworld-deployment
  960  kubectl rollout undo deployment helloworld-deployment
  961  kubectl rollout history deployment helloworld-deployment
  962  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:4
  963  kubectl rollout history deployment helloworld-deployment
  964  kubectl rollout history deployment helloworld-deployment --revsion=6
  965  kubectl rollout history deployment helloworld-deployment --revision=6
  966  kubectl rollout history deployment helloworld-deployment --revision=5
  967  kubectl rollout history deployment helloworld-deployment --revision=2
  968  kubectl rollout history deployment helloworld-deployment --revision=1
  969  kubectl rollout undo deployment helloworld-deployment --to-revsion=1
  970  kubectl rollout undo deployment helloworld-deployment --to-revision=1
  971  gcloud container clusters get-credentials k8s-demo-cluster --zone us-central1-a --project sapient-office-218912
  972  kubectl get nodes 
  973  ls
  974  git clone https://github.com/amitvashist7/k8s-docker-20190819.git
  975  ls
  976  cd k8s-docker-20190819/
  977  ls
  978  cd K8s/
  979  ls
  980  cd 02-First-App/
  981  ls
  982  kubectl create -f helloworld.yml 
  983  kubectl get pods 
  984  kubectl get pods -o wide
  985  kubectl cluster-info
  986  kubectl versions
  987  kubectl version
  988  kubectl api-version
  989  kubectl api-versions
  990  kubectl api-resources
  991  ls
  992  cd ..
  993  ls
  994  history 
  995  ls
  996  vi K8s-history.txt 
  997  vi K8s-history-2.txt 
  998  ls
  999  git add . 
 1000  git commit -m "K8s-History" ; git push origin master 
 1001  ls
 1002  cd k8s-docker-20190819/
 1003  ls
 1004  cd K8s/
 1005  ls
 1006  kubectl get pods 
 1007  ls
 1008  cp -rf ../../kubernetes-project/replication-controller 03-Replication-controller
 1009  ls
 1010  cd 03-Replication-controller/
 1011  ls
 1012  vim helloworld-repl-controller.yml 
 1013  kubectl create -f helloworld-repl-controller.yml 
 1014  kubectl get rc
 1015  kubectl get pods 
 1016  kubectl get pods -o wide 
 1017  cd 
 1018  kubectl get pods -o wide 
 1019  kubectl delete pod helloworld-controller-cfdcw
 1020  kubectl get pods 
 1021  kubectl delete pod helloworld-controller-ggkl8 helloworld-controller-kxlls
 1022  kubectl get pods 
 1023  kubectl describe pods helloworld-controller-cf6bk
 1024  kubectl get rc 
 1025  kubectl edit rc helloworld-controller
 1026  kubectl get rc 
 1027  kubectl get pods 
 1028  vim k8s-docker-20190819/K8s/03-Replication-controller/helloworld-repl-controller.yml 
 1029  kubectl create -f k8s-docker-20190819/K8s/03-Replication-controller/helloworld-repl-controller.yml
 1030  kubectl update -f k8s-docker-20190819/K8s/03-Replication-controller/helloworld-repl-controller.yml
 1031  kubectl apply -f k8s-docker-20190819/K8s/03-Replication-controller/helloworld-repl-controller.yml
 1032  kubectl get pods 
 1033  kubectl get pods -o wide 
 1034  kubectl get pods 
 1035  kubectl scale --replica=4 rc helloworld-controller
 1036  kubectl scale --replicas=4 rc helloworld-controller
 1037  kubectl get pods 
 1038  kubectl scale --replicas=1 rc helloworld-controller
 1039  kubectl get pods 
 1040  kubectl describe  rc helloworld-controller
 1041  ls
 1042  cd k8s-docker-20190819/
 1043  ls
 1044  cd K8s/
 1045  ls
 1046  cat K8s-history-2.txt >> K8s-history.txt 
 1047  history > K8s-history-2.txt 
